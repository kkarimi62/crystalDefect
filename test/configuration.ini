[flags]
RemoteMachine        =  True
      
[input files]      
lib_path             = ../../HeaDef/postprocess .
input_path           = ../simulations/ni/kmc/inactive/Run0
dump_file            = allconf
defect_file          = allconf_defect
diffusion_file       = Diffusion.dat
pure_crystal         = data_pure.dat
species              = Ni Ni

[descriptors]
descriptors          = True
#--- cutoff distance for neighbor list
r_cut                = 3.0
#--- descritization length
dr                   = 0.29 #0.58 #0.29 #0.11
#--- width of the kernel
scale                = 0.25

[neural net]
input_path           =  ./descriptors/ni/irradiation/dpa0_7th
#--- same realizations with different diffusion paths sampled from the same catalog


[neural net classification]
classification       =  True
input_path           =  ./descriptors/ni/irradiation/dpa0_7th
nruns                =  1
n_train              =  1000
#--- 'keras' or 'sklearn'
implementation       = 'keras'
#--- # of epochs
max_iter             =  [100]
learning_rate_init   =  [1e-5]
#--- 'linear','sigmoid','relu': use 'relu' for classification
activation           =  'relu'

#--- ANN: True, CNN: False
fully_connected      =  True
cnn                  =  False
 
 
number_hidden_layers =  3
#------------------- -------------
#--- set parameters  for ann 
#------------------- -------------
#--- mlp parameters  for "sklearn"
hidden_layer_sizes   =  [(1000,1000)]
tol                  =  [1.0e-4]
#--- reg. parameter 
alpha                =  [1e-4]
#--- don't change! 
n_iter_no_change     =  [100000]
#--- keras 
#--- number of neurons
hidden_layer_size    =  100
 
#--------------------------------
#--- set parameters for cnn 
#--------------------------------
n_channels           =  16
kernel_size          =  (3,3,3)



[neural net regression]
regression           =  True
nruns                =  1
n_train              =  1000
#--- 'keras' or 'sklearn'
implementation       = 'keras'
#--- # of epochs
max_iter             =  [100]
learning_rate_init   =  [1e-5]
#--- training based on 0: only non-crystalline atoms, 1:every atom
train_type           =  0
#--- 'linear','sigmoid','relu': use 'relu' for classification
activation           =  'linear'

#--- ANN: True, CNN: False
fully_connected      =  False
cnn                  =  True
  
number_hidden_layers =  3
#------------------- -------------
#--- set parameters  for ann 
#------------------- -------------
#--- mlp parameters  for "sklearn"
hidden_layer_sizes   =  [(1000,1000)]
tol                  =  [1.0e-4]
#--- reg. parameter 
alpha                =  [1e-4]
#--- don't change! 
n_iter_no_change     =  [100000]
#--- keras 
#--- number of neurons
hidden_layer_size    =  100
 
#--------------------------------
#--- set parameters for cnn 
#--------------------------------
n_channels           =  16
kernel_size          =  (3,3,3)

[ml mc]
input_path           = . 
dump_file            = dump.xyz
classifier_load      = best_model/convnetClassifier_from_scratch.tf
regressor_load       = best_model/convnetRegressor_from_scratch.tf
classifier_scaler    = best_model/classifier.sav
regressor_scaler     = best_model/scaler_regression.sav
mc_steps             = 100
temperature          = 300.0