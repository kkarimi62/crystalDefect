[flags]
remotemachine = True

[input files]
lib_path = /mnt/home/kkarimi/Project/git/crystalDefect/test/../../HeaDef/postprocess /mnt/home/kkarimi/Project/git/crystalDefect/test
input_path = /mnt/home/kkarimi/Project/git/crystalDefect/test/descriptors/ni/pure/shape10x10x10/Run0
dump_file = allconf
defect_file = allconf_defect
diffusion_file = Diffusion.dat
pure_crystal = data_pure.dat
species = Ni Ni

[descriptors]
descriptors = True
r_cut = 4.0
dr = 7
scale = 0.25

[neural net]
input_path = /mnt/home/kkarimi/Project/git/crystalDefect/test/descriptors/ni/pure/shape10x10x10

[neural net classification]
classification = True
nruns = 32
n_train = 900
implementation = 'keras'
max_iter = [2000]
learning_rate_init = [1e-5]
activation = 'relu'
fully_connected = True
cnn = False
number_hidden_layers = 3
hidden_layer_sizes = [(1000,1000)]
tol = [1.0e-4]
alpha = [1e-4]
n_iter_no_change = [100000]
hidden_layer_size = 100
n_channels = 16
kernel_size = (3,3,3)

[neural net regression]
regression = True
nruns = 32
n_train = 900
du = 0.5
umax = 3.5
implementation = 'keras'
max_iter = [2000]
learning_rate_init = [1e-5]
activation = 'linear'
fully_connected = False
cnn = True
number_hidden_layers = 3
hidden_layer_sizes = [(1000,1000)]
tol = [1.0e-4]
alpha = [1e-4]
n_iter_no_change = [100000]
hidden_layer_size = 100
n_channels = 16
kernel_size = (3,3,3)

[gnn]
input_path = /mnt/home/kkarimi/Project/git/crystalDefect/test/descriptors/ni/pure/shape10x10x10
nruns = 1
ntrain = 10000
c_in = 3  # Dimensionality of atom positions (e.g., x, y, z coordinates)
c_hidden = 32  # Dimensionality of hidden layers
c_out = 3  # Dimensionality of displacement vectors for each snapshot
num_layers = 4  # number of hidden layers
activation = nn.ReLU() #nn.Identity()
lr = 1.0e-4
num_epochs = 1000000
noise_std = 0.1

[NeuralNets]
ntrain = 1000
max_iter = 10000
learning_rate = 1e-4
noise_std = 0.1
activation = 'relu'
n_channels = 32
number_hidden_layers = 2

[ml mc]
input_path = /mnt/home/kkarimi/Project/git/crystalDefect/test/descriptors/ni/pure/shape10x10x10/Run0
dump_file = dump.1.xyz
classifier_load = best_model/convnetClassifier_from_scratch.tf
regressor_load = best_model/convnetMultiLabelClassifier_from_scratch.tf
regressor_barrier = best_model/convnetRegressorMixedInput_from_scratch.tf
classifier_scaler = best_model/classifier.sav
regressor_scaler = best_model/scaler_regression.sav
regressor_en_scaler = best_model/scaler_regression_barriers.sav
mc_steps = 1
temperature = 300.0

