# Initialize simulation
include ${INC}/initSoftWall.mod

# Create geometry
variable box_length equal 11.0
lattice fcc 3.52

variable xhi equal ${box_length}+0.25
region box block 0.25 ${xhi} 0.25 ${xhi} 0.25 2.25
create_box 2 box
create_atoms 1 box

# Remove atoms to create a cylindrical hole
variable xc equal 0.5*${box_length}
variable radius equal 1.0
region hole cylinder z ${xc} ${xc} ${radius} -100.0 100.0 side in units lattice
delete_atoms region hole

# Create a vacancy near the boundary
#variable xlo equal ${box_length}-0.25
#variable xhi equal ${box_length}+0.25
#region vacancy block ${xlo} ${xhi} ${xlo} ${xhi} 0.75 1.25 units lattice
#group boundary region vacancy
# Assert that group boundary has only one atom
#variable num_atoms equal count(boundary)
#if "${num_atoms} != 1" then &
#	print "num_atoms=${num_atoms} Error: Boundary group does not have exactly one atom." &
#    print "Halting simulation." &
#    quit 
#
#delete_atoms group boundary

# Define mass for Ni atoms
mass 1 58.6934
mass 2 58.6934

# Define potential
include ${INC}/potential.mod

#-----------------------------
#--- compute & dump variables
#-----------------------------
#compute     1 all stress/atom NULL pair
#dump        1 all custom ${nevery} ${OUT_PATH}/${DumpFile} id type x y z c_1[1] c_1[2] c_1[3] c_1[4] c_1[5] c_1[6]
#dump_modify 1 flush yes format line "%d %d %15.14e %15.14e %15.14e %4.3e %4.3e %4.3e %4.3e %4.3e %4.3e"
dump        1 all custom ${nevery} ${OUT_PATH}/${DumpFile} id type x y z
dump_modify 1 flush yes format line "%d %d %4.3e %4.3e %4.3e"
include ${INC}/thermo.mod

#--- minimize 
minimize ${etol} ${ftol} ${maxiter} ${maxeval} #--- initial state is already in equilibrium!


# Define a buffer layer around the hole
variable xc equal 0.5*${box_length}
variable radius equal 2.0
region buffer cylinder z ${xc} ${xc} ${radius} -1000.0 1000.0 side in units lattice

# Create a group for the buffer layer
group buffer_region region buffer
set group buffer_region type 2

# Fix atoms inside the buffer layer
fix f2 buffer_region setforce 0.0 0.0 0.0
velocity buffer_region set 0.0 0.0 0.0

# Define a region excluding the buffer layer
group no_buffer subtract all buffer_region

# Create a vacancy (within no_buffer)
variable ix equal floor(random(${radius},${box_length},${rnd}))
variable iy equal floor(random(${radius},${box_length},${rnd1}))
variable ixx equal ${ix}
variable iyy equal ${iy}
variable xlo equal ${ixx}-0.25
variable xhi equal ${ixx}+0.25
variable ylo equal ${iyy}-0.25
variable yhi equal ${iyy}+0.25
region vacancy block ${xlo} ${xhi} ${ylo} ${yhi} 0.75 1.25 units lattice
group vacancy_group region vacancy
# Assert that group boundary has only one atom
variable num_atoms equal count(vacancy_group)
if "${num_atoms} != 1" then &
	print "num_atoms=${num_atoms} Error: Boundary group does not have exactly one atom." &
    print "Halting simulation." &
    quit
delete_atoms group vacancy_group


#--- minimize 
minimize ${etol} ${ftol} ${maxiter} ${maxeval} #--- initial state is already in equilibrium!

#--- to be used for kmc
write_data                ${WriteData} 

# Set velocities
variable                  t_eq      equal     30000.0*${damp_t}         # Equlibration time
variable 				  Nstep  	equal	floor(${t_eq}/${dt}) #--- timesteps
velocity                  no_buffer       create     $T     ${rnd}  mom    yes  rot  yes  dist  gaussian  # Dynamics starts
fix                      f1        no_buffer        nvt temp   $T  $T  ${damp_t}  


# Define fix for MSD computation
compute msd_all no_buffer msd

# Define fix for averaging and printing MSD
fix 1 all ave/time 1 1 1000 c_msd_all[*] file msd.dat

# Define fix and run
run                       ${Nstep}

unfix                     f1
reset_timestep            0
# -------------------------------------- Write Data ----------------------------------------------#

  

